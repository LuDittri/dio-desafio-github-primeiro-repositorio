Git: Ferramenta de versionamento de código para monitorar diferente versões de um mesmo código.
GitHub: repositório online para armazenamento de códigos.

*Git e GitHub são tecnologias diferentes mas que se complementam!

• CLI: Comand Line Interface, forma de navegação para navegador através do Git, abaixo segue comando para utilizar esse tipo de navegação:
    • cmd: abre prompt de comando;
    • dir: lista de diretórios das pastas;
    • cd: Comando para navegar entre as pastas do diretório;
        • cd .. : retrocede a pasta;
    • cls: limpa a tela do terminal;
    • TAB: no terminal essa tecla auto completa a digitação de algum diretório;
    • mkdir (nome): comando que cria um diretório a partir do terminal;
    • del (nome): Deleta a conteúdo do diretório
    • rmdir (nome): Deleta diretório
    • mv (arquivo) (caminho): move arquivos para outro destino

FUNCIONAMENTO POR DENTRO DO GIT: 
    • SHA1: Conjunto de funções hash criptograficas projetadas pela NSA, ela gera um conjunto de caracteres de identificação de 40 dígitos. Forma curta de representar um arquivo através de criptografia, protegendo o mesmo.
        • Através do SHA1 é possível verificar como o git funciona através da identificação que é gerada sempre que é mudado qualquer mínimo detalhe no código
    • Blobs, Trees e Commits são os três tipos básicos de objetos (Fundamentais):
        • Blobs: Objeto que contém metadados do Git e armazena os arquivos, seu tamanho e SHA1. Objeto que encapsula o comportamento de diretórios, ele aponta para diretórios e seus arquivos;
        • Trees: Objeto que contém metadados do Git e armazena os Blobs, nome do arquivo e SHA1;
        •Commit: Objeto que contém metadados do Git e armazena os Trees, nome do arquivo e SHA1. Possuem um SHA1 e esse hash é de toda a informação contida;

Comandos do GIT:
    • Iniciar repositório do Git: git init;
    • Mover arquivos, dar início ao versionamento: git add;
    • Cria commit: git commit;
    • para começar a utilização na primeira vez é necessário definir configurações com os códigos abaixo:
        • git config --global user.email "lucdittrich@hotmail.com": Adiciona e-mail para repositório;
        • git config --global user.name Dittri: Adiciona nome do autor ao repositório;

CICLO DE VIDA:
    • O arquivo tem dois modos: Untracked (que o git não tem ciência) e Tracked (Arquivo que o git sabe que existe), Dentro de Tracked existem 3 estados (Unmodified, Modified e Staged);
        • Unmodified: Arquivo que deixa de ser Untracked mas não possui nenhuma modificação;
        • Modified: Arquivo que foi modificado;
        • Staged: Arquivo que já está pronto pra ser usado, esta no "Back-stage de uma apresentação";
    • O que é um repositório: temos dois ambientes neste local (Ambiente de desenvolvimento e o servidor):
        • Dentro do Workspace, temos três áreas: repositório local, staging area e diretório de trabalho;

    COMANDOS:
    • git add (nome): Muda arquivo para staged e add ao Git;
    • git commit -m "(Comentário)": faz commit e adiciona o comentário a esse commit;

    